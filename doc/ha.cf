#
#	There are lots of options in this file.  All you have to have is a set
#	of nodes listedJ {"node ...}
#	and one of {serial, udp, or ppp-udp}
#
#
#       Note on logging:
#       If any of debugfile, logfile and logfacility are defined then they
#       will be used. If debugfile and/or logfile are not defined and
#       logfacility is defined then the respective logging and debug
#       messages will be loged to syslog. If logfacility is not defined
#       then debugfile and logfile will be used to log messges. If
#       logfacility is not defined and debugfile and/or logfile are not
#       defined then defaults will be used for debugfile and logfile as
#       required and messages will be sent there.
#
#	File to wirte debug messages to
#debugfile /var/log/ha-debug
#
#
# 	File to write other messages to
#
#logfile	/var/log/ha-log
#
#
#	Facility to use for syslog()/logger 
#
logfacility	local0
#
#
#	keepalive: how many seconds between heartbeats
#
#keepalive 2
#
#	deadtime: seconds-to-declare-host-dead
#
#deadtime 10
#	hopfudge maximum hop count minus number of nodes in config
#hopfudge 1
#	
#	serial	serialportname ...
#serial	/dev/ttyS0
#
#	Only for serial ports.  It applies to both PPP/UDP and "raw" ports
#
#	This means run PPP over ports ttyS1 and ttyS2
#	Their respective IP addresses are as listed.
#	Note that I enforce that these are local addresses.  Other addresses
#	are almost certainly a mistake.
#ppp-udp	/dev/ttyS1 10.0.0.1 /dev/ttyS2 10.0.0.2
#
#	Baud rate for both serial and ppp-udp ports...
#
#baud	19200
#
#	What UDP port to use for udp or ppp-udp communication?
#
#udpport	694
#
#	What interfaces to heartbeat over?
#
#udp	eth0
#
#	Watchdog is the watchdog timer.  If our own heart doesn't beat for
#	a minute, then our machine will reboot.
#
#watchdog /dev/watchdog
#
#       "Legacy" STONITH support
#       Using this directive assumes that there is one stonith 
#       device in the cluster.  Parameters to this device are 
#       read from a configuration file. The format of this line is:
#
#         stonith <stonith_type> <configfile>
#
#       NOTE: it is up to you to maintain this file on each node in the
#       cluster!
#
#stonith baytech /etc/ha.d/conf/stonith.baytech
#
#       STONITH support
#       You can configure multiple stonith devices using this directive.
#       The format of the line is:
#         stonith_host <hostfrom> <stonith_type> <params...>
#         <hostfrom> is the machine the stonith device is attached
#              to or * to mean it is accessible from any host. 
#         <stonith_type> is the type of stonith device (a list of
#              supported drives is in /usr/lib/stonith.)
#         <params...> are driver specific parameters.  To see the
#              format for a particular device, run:
#           stonith -l -t <stonith_type> 
#
#stonith_host *     baytech 10.0.0.3 mylogin mysecretpassword
#stonith_host ken3  rps10 /dev/ttyS1 kathy 0 
#stonith_host kathy rps10 /dev/ttyS1 ken3 0 
#       
#	Tell what machines are in the cluster
#	node	nodename ...	-- must match uname -n
#node	ken3
#node	kathy
