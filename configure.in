dnl
dnl autoconf for heartbeat
dnl	Started by David Lee <T.D.Lee@durham.ac.uk> December 2000
dnl automake stuff 
dnl     added by Michael Moerz <e9625136@stud3.tuwien.ac.at> February 2001

dnl Initialiase, with sanity check of a unique file in the hierarchy
AC_REVISION($Revision: 1.27 $) dnl cvs revision
AC_INIT(Specfile)
dnl AC_CONFIG_AUX_DIR(config)
AC_CANONICAL_HOST

dnl Where #defines go (e.g. `AC_CHECK_HEADERS' below)
AM_CONFIG_HEADER(linux-ha/config.h)
AM_INIT_AUTOMAKE(linux-ha, 0.4.9)

dnl *************************************************************************
dnl checks for programs
dnl 
dnl Which C compiler?
dnl Defaults to GNU C compiler if available.
dnl Always tries to set the compiler to ANSI C via options (AM)
dnl Can force other with environment variable "CC".
AC_PROG_CC
AM_PROG_CC_STDC dnl this is not possible cause of CLK_TCK??
AC_LIBTOOL_DLOPEN               dnl Enable dlopen support...
AC_LIBLTDL_CONVENIENCE          dnl make libltdl a convenience lib
AM_PROG_LIBTOOL
AC_CHECK_PROG(HTML2TXT, lynx, lynx)
AC_CHECK_PROG(POD2MAN, pod2man, pod2man)

AC_SUBST(HTML2TXT)
AC_SUBST(POD2MAN)

dnl Locales check - is a real ugly workaround for now til I find
dnl something more useful
dnl
dnl "Eric Z. Ayers" wrote:
dnl > 
dnl > Here are some more data points:
dnl > 
dnl > SUN: /usr/lib/locale/
dnl > HP : /usr/lib/nls/loc/
dnl > OSF: /usr/lib/nls/loc/
dnl > LINUX: /usr/share/locale/
dnl > UNIXWARE: /usr/lib/locale/
dnl > FREEBSD: /usr/share/locale
dnl > VMS:  just kidding
dnl 
locale_locations="/usr/share/locale /usr/lib/locale /usr/lib/nls/loc"
for l in $locale_locations
do
    if test -d "$l" ; then
        LOCALE="$l"
        break
    fi
done
if test "x$LOCALE" = "x"
then
     AC_MSG_ERROR(no locales found needed for stonith)
fi

dnl ************************************************************************
dnl checks for libraries
dnl
AC_CHECK_LIB(nsl, t_open)                dnl -lnsl
AC_CHECK_LIB(socket, socket)             dnl -lsocket
AC_CHECK_LIB(posix4, sched_getscheduler) dnl -lposix4
AC_CHECK_LIB(dl, dlopen)		 dnl -ldl (for Linux)
AC_CHECK_LIB(c, dlopen)		 	 dnl -ldl (for Linux)
AC_CHECK_LIB(glib, g_string_new)	 dnl -lglib
#
#	Is dlopen in library -ldl?
#
if test "$ac_cv_lib_dl_dlopen" = yes; then
	LIBADD_DL=-ldl
else
#
#	Is dlopen in library -lintl?
#
	AC_CHECK_LIB(intl, gettext)	 dnl -lintl (for FreeBsd)
	if test "$ac_cv_lib_intl_gettext" = yes; then
		LIBADD_DL=-lintl
	else
#
#	How about libc?
#
	        AC_CHECK_LIB(c, dlopen)	 dnl -lc - for FreeBSD
	        if test "$ac_cv_lib_c_dlopen" != yes; then
		  AC_MSG_ERROR(no lib providing dlopen found)
                fi
	fi
fi

AC_MSG_CHECKING(whether we need to include /usr/local/include)
dnl
dnl this is mainly for FreeBSD...
if
  test ! -f /usr/include/libintl.h  -a -f /usr/local/include/libintl.h
then
  AC_MSG_RESULT(yes)
  CPPFLAGS="$CPPFLAGS -I/usr/local/include"
  LIBADD_DL="$LIBADD_DL -lintl"
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for special glib includes: )
if
  test  -f /usr/bin/glib-config -a -x /usr/bin/glib-config
then
  GLHEAD=`/usr/bin/glib-config --cflags`
  AC_MSG_RESULT($GLHEAD)
  CPPFLAGS="$CPPFLAGS $GLHEAD"
  AC_MSG_CHECKING(for glib library flags)
  GLIBLIB=`/usr/bin/glib-config --libs`
  LIBS="$LIBS $GLIBLIB"
  AC_MSG_RESULT($GLIBLIB)
else
  AC_MSG_RESULT(none)
fi



dnl ************************************************************************
dnl checks for header files
dnl 
dnl check for ANSI *.h files first
dnl	asm/page.h: Linux, for system PAGE_SIZE
AC_HEADER_STDC
AC_CHECK_HEADERS(db.h asm/page.h time.h)
AC_CHECK_HEADERS(netinet/in_systm.h)
AC_CHECK_HEADERS(netinet/ip_var.h netinet/ip.h netinet/ip_compat.h netinet/ip_fw.h)
AC_CHECK_HEADERS(sys/sockio.h)
AC_CHECK_HEADERS(libintl.h)


dnl ************************************************************************
dnl  checks for typedefs
dnl

dnl ************************************************************************
dnl checks for structures
dnl

dnl Check TERMIOS for components (e.g. c_line not present on Solaris)
dnl
AC_CACHE_CHECK([for c_line in termios],samba_cv_HAVE_TERMIOS_C_LINE,[
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/termios.h>],
[struct termios ti;  ti.c_line = 'a';],
samba_cv_HAVE_TERMIOS_C_LINE=yes,samba_cv_HAVE_TERMIOS_C_LINE=no,samba_cv_HAVE_TERMIOS_C_LINE=cross)])
if test x"$samba_cv_HAVE_TERMIOS_C_LINE" = x"yes"; then
    AC_DEFINE(HAVE_TERMIOS_C_LINE)
fi

dnl Check sockaddr_in for components (e.g. sin_len not present on Solaris)
dnl
AC_CACHE_CHECK([for sin_len in sockaddr_in],samba_cv_HAVE_SOCKADDR_IN_SIN_LEN,[
AC_TRY_COMPILE([#include <sys/types.h>
#include <netinet/in.h>],
[struct sockaddr_in si;  si.sin_len = 1;],
samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=yes,samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=no,samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=cross)])
if test x"$samba_cv_HAVE_SOCKADDR_IN_SIN_LEN" = x"yes"; then
    AC_DEFINE(HAVE_SOCKADDR_IN_SIN_LEN)
fi

dnl ************************************************************************
dnl checks for compiler characteristics
dnl

dnl Warnings for C compilers.  Note: generic, portable warnings only.
dnl Things likely to be specific to a particular OS or module should be
dnl carefully handled afterwards.

AC_C_STRINGIZE

CC_WARNINGS=""
if test "$GCC" = yes; then
dnl
dnl We make sure warnings are carefully scrubbed out of the output if
dnl you're running on some platforms.  You can enable that behavior with
dnl the option "fatal_warnings", by specifying --enable-fatal_warnings.
dnl Or, you can disable it with --disable-fatal_warnings.
dnl
	case "$host_os" in
  	*linux*)
          	if test "$enable_fatal_warnings" = ""; then
          	echo "defaulting  --enable-fatal_warnings on this platform"
              	enable_fatal_warnings=yes
          	fi
          	;;
	esac


	EXTRA_WARNINGS=""
	if test "$enable_fatal_warnings" = yes; then
    	  EXTRA_WARNINGS="-Werror"
	fi

	if test "$enable_traditional_warning" = yes; then
    	  EXTRA_WARNINGS="$EXTRA_WARNINGS -Wtraditional"
	fi

	CC_WARNINGS="-Wall -Wmissing-prototypes \
		-Wmissing-declarations \
		-Wstrict-prototypes \
		-Wshadow \
		-Wpointer-arith \
		-Wwrite-strings \
		-Wcast-qual -Wcast-align \
		-Wnested-externs -Winline $EXTRA_WARNINGS"
fi

case "$host_os" in
*solaris*)	HEARTBEAT_LIBS="-lposix4"
		;;
*bsd*)		LIBS="$LIBS -L/usr/local/lib"
dnl		STONITH_LDADD="-lintl"
		;;
dnl *linux*)	STONITH_LDADD="-ldl"
dnl 		;;
esac


dnl ************************************************************************
dnl checks for library functions
dnl
dnl	scandir: Only on BSD.
dnl		System-V systems may have it, but hidden and/or deprecated.
dnl		Should consider rewriting source code to avoid.
dnl	setenv: is some bsdish function that should also be avoided (use
dnl             putenv instead)
dnl		On the other hand, putenv doesn't provide the right API for the
dnl		code and has memory leaks designed in (sigh...)  Fortunately this
dnl		doesn't matter to the linux-ha code at this time.
AC_CHECK_FUNCS(scandir)
AC_CHECK_FUNCS(strerror)
AC_CHECK_FUNCS(inet_aton)
AC_CHECK_FUNCS(flock fcntl)
AC_CHECK_FUNCS(setenv scandir)
AC_REPLACE_FUNCS(setenv scandir)

dnl
dnl We reset CFLAGS to include our warnings *after* all function
dnl checking goes on, so that our warning flags don't keep the
dnl AC_*FUNCS() calls above from working.  In particular, -Werror will
dnl *always* cause us troubles if we set it before here.
dnl
dnl
CFLAGS="$CFLAGS $CC_WARNINGS"
dnl AC_SUBST(CC_WARNINGS)

dnl ************************************************************************
dnl pre AC_OUTPUT stuff
dnl

dnl th aux dir (for holding config & autogenerated stuff)
dnl AC_SUBST(ac_aux_dir)

dnl for libtool to work LTLIBOJS is needed (currently bug of autoconf)
Xsed="sed -e s/^X//"
LTLIBOBJS=`echo X"$LIBOBJS"|[$Xsed -e "s,\.[^.]* ,.lo ,g;s,\.[^.]*$,.lo,"]`
AC_SUBST(LTLIBOBJS)

dnl STONITH_LDADD=LIBADD_DL
dnl AC_SUBST(STONITH_LDADD)
AC_SUBST(LIBADD_DL)

AC_SUBST(LOCALE)

HEARTBEATPKG=heartbeat
AC_SUBST(HEARTBEATPKG)

STONITHPKG=stonith
AC_SUBST(STONITHPKG)

dnl libltdl additions
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

AC_CONFIG_SUBDIRS(libltdl)

dnl The Makefiles we output
AC_OUTPUT(Makefile doc/Makefile replace/Makefile heartbeat/Makefile \
heartbeat/lib/Makefile heartbeat/rc.d/Makefile heartbeat/resource.d/Makefile 
heartbeat/init.d/Makefile heartbeat/logrotate.d/Makefile \
ldirectord/Makefile ldirectord/init.d/Makefile \
ldirectord/logrotate.d/Makefile \
stonith/Makefile dnl proc-ha/Makefile
)

dnl subpackages configuration - perhaps configure it properly some other time
dnl when it has been discussed at linux-ha-dev
dnl AC_CONFIG_SUBDIRS(stonith heartbeat)
