dnl
dnl autoconf for heartbeat
dnl	Started by David Lee <T.D.Lee@durham.ac.uk> December 2000
dnl automake stuff 
dnl     added by Michael Moerz <e9625136@stud3.tuwien.ac.at> February 2001

dnl Initialiase, with sanity check of a unique file in the hierarchy
AC_REVISION($Revision: 1.3 $) dnl cvs revision
AC_INIT(Specfile)
AC_CONFIG_AUX_DIR(config)
AC_CANONICAL_HOST

dnl Where #defines go (e.g. `AC_CHECK_HEADERS' below)
AM_CONFIG_HEADER(linux-ha/config.h)
AM_INIT_AUTOMAKE(linux-ha, 0.4.9)

dnl *************************************************************************
dnl checks for programs
dnl 
dnl Which C compiler?
dnl Defaults to GNU C compiler if available.
dnl Always tries to set the compiler to ANSI C via options (AM)
dnl Can force other with environment variable "CC".
AC_PROG_CC
AM_PROG_CC_STDC dnl this is not possible cause of CLK_TCK??
AM_PROG_LIBTOOL
AC_CHECK_PROG(HTML2TXT, lynx, lynx)
AC_CHECK_PROG(POD2MAN, pod2man, pod2man)

AC_SUBST(HTML2TXT)
AC_SUBST(POD2MAN)

dnl Locales check - is a real ugly workaround for now til I find
dnl something more usefull
if test -d /usr/share/locale; then
	LOCALE=/usr/share/locale
else
	AC_MSG_ERROR(no locales found needed for stonith)
fi

dnl ************************************************************************
dnl checks for libraries
dnl
AC_CHECK_LIB(nsl, t_open)                dnl -lnsl
AC_CHECK_LIB(socket, socket)             dnl -lsocket
AC_CHECK_LIB(posix4, sched_getscheduler) dnl -lposix4
AC_CHECK_LIB(dl, dlopen)		 dnl -ldl (for Linux)
if test "$ac_cv_lib_dl_dlopen" = yes; then
	LIBADD_DL=-ldl
else
	AC_CHECK_LIB(intl, dlopen)	 dnl -lintl (for FreeBsd)
	if test "ac_cv_lib_intl_dlopen" = yes; then
		LIBADD_DL=-lintl
	else
		AC_MSG_ERROR(no lib providing dlopen found)
	fi
fi

dnl ************************************************************************
dnl checks for header files
dnl 
dnl check for ANSI *.h files first
dnl	asm/page.h: Linux, for system PAGE_SIZE
AC_HEADER_STDC
AC_CHECK_HEADERS(db.h asm/page.h time.h)
AC_CHECK_HEADERS(netinet/in_systm.h)
AC_CHECK_HEADERS(netinet/ip_var.h netinet/ip.h netinet/ip_compat.h netinet/ip_fwd.h)


dnl ************************************************************************
dnl  checks for typedefs
dnl

dnl ************************************************************************
dnl checks for structures
dnl

dnl Check TERMIOS for components (e.g. c_line not present on Solaris)
dnl
AC_CACHE_CHECK([for c_line in termios],samba_cv_HAVE_TERMIOS_C_LINE,[
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/termios.h>],
[struct termios ti;  ti.c_line = 'a';],
samba_cv_HAVE_TERMIOS_C_LINE=yes,samba_cv_HAVE_TERMIOS_C_LINE=no,samba_cv_HAVE_TERMIOS_C_LINE=cross)])
if test x"$samba_cv_HAVE_TERMIOS_C_LINE" = x"yes"; then
    AC_DEFINE(HAVE_TERMIOS_C_LINE)
fi

dnl Check sockaddr_in for components (e.g. sin_len not present on Solaris)
dnl
AC_CACHE_CHECK([for sin_len in sockaddr_in],samba_cv_HAVE_SOCKADDR_IN_SIN_LEN,[
AC_TRY_COMPILE([#include <sys/types.h>
#include <netinet/in.h>],
[struct sockaddr_in si;  si.sin_len = 1;],
samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=yes,samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=no,samba_cv_HAVE_SOCKADDR_IN_SIN_LEN=cross)])
if test x"$samba_cv_HAVE_SOCKADDR_IN_SIN_LEN" = x"yes"; then
    AC_DEFINE(HAVE_SOCKADDR_IN_SIN_LEN)
fi

dnl ************************************************************************
dnl checks for compiler characteristics
dnl

dnl Warnings for C compilers.  Note: generic, portable warnings only.
dnl Things likely to be specific to a particular OS or module should be
dnl carefully handled afterwards.
if test "$GCC" = yes; then
	CC_WARNINGS="-Wall -Wmissing-prototypes \
		-Wmissing-declarations \
		-Wstrict-prototypes \
		-Wshadow \
		-Wpointer-arith \
		-Wwrite-strings \
		-Wcast-qual -Wcast-align \
		-Wtraditional \
		-Wnested-externs -Winline -Werror"
	CFLAGS="$CFLAGS $CC_WARNINGS"
fi

case "$host_os" in
*solaris*)	HEARTBEAT_LIBS="-lposix4"
		;;
dnl *bsd*)	STONITH_LDADD="-lintl"
dnl 		;;
dnl *linux*)	STONITH_LDADD="-ldl"
dnl 		;;
esac

dnl AC_SUBST(CC_WARNINGS)

dnl ************************************************************************
dnl checks for library functions
dnl
dnl	scandir: Only on BSD.
dnl		System-V systems may have it, but hidden and/or deprecated.
dnl		Should consider rewriting source code to avoid.
dnl	setenv: is some bsdish function that should also be avoided (use
dnl             putenv insteed) 
AC_CHECK_FUNCS(scandir)
AC_CHECK_FUNCS(strerror)
AC_REPLACE_FUNCS(setenv)

dnl ************************************************************************
dnl pre AC_OUTPUT stuff
dnl

dnl th aux dir (for holding config & autogenerated stuff)
AC_SUBST(ac_aux_dir)

dnl for libtool to work LTLIBOJS is needed (currently bug of autoconf)
Xsed="sed -e s/^X//"
LTLIBOBJS=`echo X"$LIBOBJS"|[$Xsed -e "s,\.[^.]* ,.lo ,g;s,\.[^.]*$,.lo,"]`
AC_SUBST(LTLIBOBJS)

dnl STONITH_LDADD=LIBADD_DL
dnl AC_SUBST(STONITH_LDADD)
AC_SUBST(LIBADD_DL)

AC_SUBST(LOCALE)

HEARTBEATPKG=heartbeat
AC_SUBST(HEARTBEATPKG)

STONITHPKG=stonith
AC_SUBST(STONITHPKG)

dnl The Makefiles we output
AC_OUTPUT(Makefile doc/Makefile replace/Makefile heartbeat/Makefile \
heartbeat/lib/Makefile heartbeat/rc.d/Makefile heartbeat/resource.d/Makefile 
heartbeat/init.d/Makefile heartbeat/logrotate.d/Makefile \
ldirectord/Makefile ldirectord/init.d/Makefile \
ldirectord/logrotate.d/Makefile \
stonith/Makefile dnl proc-ha/Makefile
)

dnl subpackages configuration - perhaps configure it properly some other time
dnl when it has been discussed at linux-ha-dev
dnl AC_CONFIG_SUBDIRS(stonith heartbeat)
